<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:ftp="http://www.mulesoft.org/schema/mule/ftp" xmlns:email="http://www.mulesoft.org/schema/mule/email"
	xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:https="http://www.mulesoft.org/schema/mule/https"
	xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core"
	xmlns:context="http://www.springframework.org/schema/context"
	version="CE-3.4.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/https http://www.mulesoft.org/schema/mule/https/current/mule-https.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/email http://www.mulesoft.org/schema/mule/email/current/mule-email.xsd
http://www.mulesoft.org/schema/mule/ftp http://www.mulesoft.org/schema/mule/ftp/current/mule-ftp.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<flow name="sentinelDownloadCDtestFlow1" doc:name="sentinelDownloadCDtestFlow1" doc:description="Test flow to launch the python proc on a specific remote file (path)" processingStrategy="synchronous">
        <http:inbound-endpoint exchange-pattern="request-response" host="0.0.0.0" port="9090" path="cdtest" doc:name="HTTP" />
        <object-to-string-transformer doc:name="workaround for streams error" doc:description="https://www.mulesoft.org/jira/browse/MULE-4096
https://mulemuse.wordpress.com/2014/03/21/http/"/>

        <set-payload value="Download CD Request received." doc:name="Set Body"/>        <http:response-builder status="200" contentType="text/plain" doc:name="HTTP Response Builder">
            <http:cache-control noCache="true"/>
        </http:response-builder>
        <async doc:name="Async" processingStrategy="Queued_Asynchronous_Processing_Strategy">
            <set-variable variableName="dlUUID" value="cee43865-c7b9-4528-a430-069e2bdfc7cb" doc:name="set dlUUID"/>
            <set-variable variableName="xtractedFileName" value="S1A_IW_SLC__1SDV_20150313T165641_20150313T165708_005016_00649C_D9AA.zip" doc:name="set xtractedFileName"/>
            <set-variable variableName="safeZipFile" value="${apollo.repo.path}${sentinel.ftp.path}#[dlUUID]/#[xtractedFileName]" doc:name="set safeZipFile"/>
            <set-payload value="DONE" doc:name="Set Payload to &quot;DONE&quot;"/>
            <choice doc:name="Choice">
                <when expression="#[payload == &quot;DONE&quot;]">
                    <logger message="Successful Crawl!!! #[&quot;\n&quot;] Now Python on #[safeZipFile]" level="INFO" doc:name="Successful Crawl"/>
                    <scripting:component doc:name="Call python proc">
                    <scripting:script engine="jython"><![CDATA[import xmlrpclib

proxy = xmlrpclib.ServerProxy("http://deimos.planetek.it:9091/")
print "Calling the server processor ..."

# "result" is the var that will be used as the payload
result = proxy.execute("mailalert", "tester", "change_detection", "processor", '{"INPUTSAR":"'+safeZipFile+'"}', "")
print result]]></scripting:script>
                    </scripting:component>
                    <logger message="Py Response: #[payload]" level="INFO" doc:name="Py Output"/>
                    <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to HashMap"/>
                    <set-variable variableName="crawlPath" value="#[org.apache.commons.lang.StringEscapeUtils.escapeJava(payload.get(&quot;outDir&quot;))]" doc:name="set crawlPath (escaped)"/>
                    <set-variable variableName="apolloAggregateID" value="${changedetection.apollo.aggregate}" doc:name="set apolloAggregateID"/>
                    <set-payload value="{ &quot;directory&quot;: &quot;#[crawlPath]&quot;, &quot;aggregateId&quot;:&quot;#[apolloAggregateID]&quot; }" doc:name="Set Crawler ReqBody"/>
                    <logger message="Crawler ReqBody: #[payload]" level="INFO" doc:name="Crawler ReqBody"/>
                    <flow-ref name="apolloLoaderFlow1" doc:name="Apollo Loader"/>
                    <logger message="Processor output Crawling ended with status: #[payload]" level="INFO" doc:name="Crawl exit status"/>
                </when>
                <otherwise>
                    <logger message="Unsuccessful crawl!!!" level="INFO" doc:name="Unsuccessful crawl"/>
                </otherwise>
            </choice>


        </async>
        <choice-exception-strategy doc:name="Choice Exception Strategy">
            <catch-exception-strategy doc:name="Catch HttpException" enableNotifications="false" when="#[exception.causedBy( org.apache.commons.httpclient.HttpException)]">
                <logger message="HttpException: #[exception.getCause().getMessage()]" level="WARN" doc:name="Log HttpException"/>
            </catch-exception-strategy>
            <catch-exception-strategy doc:name="Generic Exception Strategy" enableNotifications="false">
                <logger level="WARN" doc:name="Log Generic Exception" message="Generic Exception: #[exception.getCause().getMessage()]"/>
            </catch-exception-strategy>
        </choice-exception-strategy>
    </flow>
</mule>
