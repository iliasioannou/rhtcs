<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:PkLogger="http://www.mulesoft.org/schema/mule/PkLogger" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:jms="http://www.mulesoft.org/schema/mule/jms" xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:jersey="http://www.mulesoft.org/schema/mule/jersey" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:spring="http://www.springframework.org/schema/beans"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/jersey http://www.mulesoft.org/schema/mule/jersey/current/mule-jersey.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd">

	<spring:beans>
	    <spring:import resource="classpath:spring/applicationContext.xml"/>
	</spring:beans>
	
	
	
    <http:listener-config name="HTTP_Listener_Configuration_API_REST_V01" host="0.0.0.0" port="9999" basePath="api/v01" doc:name="HTTP Listener Configuration"/>
    
    <http:listener-config name="HTTP_Listener_Configuration_API_REST_V01_TESTER" host="0.0.0.0" port="9998"   basePath="api/v01/test"  doc:name="HTTP Rest Tester"/>
    <jms:activemq-connector name="Active_MQ" brokerURL="tcp://localhost:61616" validateConnections="true" doc:name="Active MQ" specification="1.1" />
    <flow name="jobApiRest">
        <http:listener doc:name="jobApiRest Listener" config-ref="HTTP_Listener_Configuration_API_REST_V01" path="/*" />
        <jersey:resources doc:name="jobApiRest Rest Impl">
			<component >
			  <spring-object bean="jobRestImpl"/>
			</component>              
        </jersey:resources>
    </flow>
    
    <flow name="rheticusLogstashFlow">
        <http:listener config-ref="HTTP_Listener_Configuration_API_REST_V01_TESTER" path="/rheticus/logstash" doc:name="HTTP"/>
        <flow-ref name="SendToLogstash" doc:name="SendToLogstash"/>
        
        <!-- 
        <set-variable variableName="instanceId" doc:name="Set instanceId" value="0" />
        <set-session-variable variableName="instanceId" value="0" doc:name="Session Variable"/>
         -->
    </flow>
    <sub-flow name="SendToLogstash">
        <set-variable variableName="instanceId" doc:name="Set instanceId" value="0" />
    	<expression-component doc:name="Increment instanceId"><![CDATA[
    	import java.util.UUID;
    	//instanceId = Integer.parseInt(instanceId) + 1;
    	instanceId = String.valueOf(UUID.randomUUID())
    	]]></expression-component>
        <!-- 
        <set-variable variableName="instanceId" doc:name="Increment instanceId" value="#[instanceId] + 1" />
         -->
    
        <set-variable doc:name="logstash" variableName="logstash" value="{&quot;processor&quot;: &quot;PS&quot;, &quot;orchestratorId&quot;:&quot;#[instanceId] &quot;, &quot;datasetId&quot;: &quot;XXXXXXX&quot;, &quot;step&quot;: &quot;L0&quot;, &quot;status&quot;: &quot;PROGRESS&quot;, &quot;message&quot;:&quot;Avvio ricerca Supermaster&quot;}" />
        <component class="it.planetek.rheticus.mule.components.Logstash" doc:name="Java"/>
        
        <expression-component doc:name="Expression"><![CDATA[Thread.sleep(2000);]]></expression-component>
        <set-variable doc:name="logstash" variableName="logstash" value="{&quot;processor&quot;: &quot;PS&quot;, &quot;orchestratorId&quot;:&quot;#[instanceId] &quot;, &quot;datasetId&quot;: &quot;XXXXXXX&quot;, &quot;step&quot;: &quot;L0&quot;, &quot;status&quot;: &quot;OK&quot;, &quot;message&quot;:&quot;Supermaster individuata&quot;}"/>
        <component class="it.planetek.rheticus.mule.components.Logstash" doc:name="Java"/>

        <expression-component doc:name="Expression"><![CDATA[Thread.sleep(3000);]]></expression-component>
        <set-variable doc:name="logstash" variableName="logstash" value="{&quot;processor&quot;: &quot;PS&quot;, &quot;orchestratorId&quot;:&quot;#[instanceId] &quot;, &quot;datasetId&quot;: &quot;XXXXXXX&quot;, &quot;step&quot;: &quot;L1&quot;, &quot;status&quot;: &quot;PROGRESS&quot;, &quot;message&quot;:&quot;Avvio download e calcolo coppie interferometriche&quot;}"/>
        <component class="it.planetek.rheticus.mule.components.Logstash" doc:name="Java"/>
        
        <expression-component doc:name="Expression"><![CDATA[Thread.sleep(4000);]]></expression-component>
        <set-variable doc:name="logstash" variableName="logstash" value="{&quot;processor&quot;: &quot;PS&quot;, &quot;orchestratorId&quot;:&quot;#[instanceId] &quot;, &quot;datasetId&quot;: &quot;XXXXXXX&quot;, &quot;step&quot;: &quot;L1&quot;, &quot;status&quot;: &quot;OK&quot;, &quot;message&quot;:&quot;Coppie interferometriche calcolate&quot;}"/>
        <component class="it.planetek.rheticus.mule.components.Logstash" doc:name="Java"/>
        
        <expression-component doc:name="Expression"><![CDATA[Thread.sleep(5000);]]></expression-component>
        <set-variable doc:name="logstash" variableName="logstash" value="{&quot;processor&quot;: &quot;PS&quot;, &quot;orchestratorId&quot;:&quot;#[instanceId] &quot;, &quot;datasetId&quot;: &quot;XXXXXXX&quot;, &quot;step&quot;: &quot;L2&quot;, &quot;status&quot;: &quot;PROGRESS&quot;, &quot;message&quot;:&quot;Avvio calcolo PS&quot;}"/>
        <component class="it.planetek.rheticus.mule.components.Logstash" doc:name="Java"/>
        
        <expression-component doc:name="Expression"><![CDATA[Thread.sleep(7000);]]></expression-component>
        <set-variable doc:name="logstash" variableName="logstash" value="{&quot;processor&quot;: &quot;PS&quot;, &quot;orchestratorId&quot;:&quot;#[instanceId] &quot;, &quot;datasetId&quot;: &quot;XXXXXXX&quot;, &quot;step&quot;: &quot;L2&quot;, &quot;status&quot;: &quot;OK&quot;, &quot;message&quot;:&quot;Calcolo PS eseguito&quot;}"/>
        <component class="it.planetek.rheticus.mule.components.Logstash" doc:name="Java"/>
    
        <expression-component doc:name="Expression"><![CDATA[Thread.sleep(3000);]]></expression-component>
        <set-variable doc:name="logstash" variableName="logstash" value="{&quot;processor&quot;: &quot;PS&quot;, &quot;orchestratorId&quot;:&quot;#[instanceId] &quot;, &quot;datasetId&quot;: &quot;XXXXXXX&quot;, &quot;step&quot;: &quot;L3&quot;, &quot;status&quot;: &quot;PROGRESS&quot;, &quot;message&quot;:&quot;Avvio ingestion PS&quot;}"/>
        <component class="it.planetek.rheticus.mule.components.Logstash" doc:name="Java"/>
    
        <expression-component doc:name="Expression"><![CDATA[Thread.sleep(3000);]]></expression-component>
        <set-variable doc:name="logstash" variableName="logstash" value="{&quot;processor&quot;: &quot;PS&quot;, &quot;orchestratorId&quot;:&quot;#[instanceId] &quot;, &quot;datasetId&quot;: &quot;XXXXXXX&quot;, &quot;step&quot;: &quot;L3&quot;, &quot;status&quot;: &quot;ERROR&quot;, &quot;message&quot;:&quot;Problemi durante ingestion PS&quot;}"/>
        <component class="it.planetek.rheticus.mule.components.Logstash" doc:name="Java"/>
    
    
    	<expression-component doc:name="Expression"><![CDATA[Thread.sleep(30000);]]></expression-component>
        <flow-ref name="rheticusLogstashFlow" doc:name="SendToLogstash"/>
    </sub-flow>
    
    
    <flow name="rheticusInternalFlow">
        <http:listener config-ref="HTTP_Listener_Configuration_API_REST_V01_TESTER" path="/rheticus/flow" doc:name="HTTP"/>
        <logger message="Internal Flow Called" level="INFO" doc:name="Log Internal Flow"/>
        <set-variable variableName="output" value="#[new java.util.HashMap()]" doc:name="output"/>
        <expression-component doc:name="Expression"><![CDATA[
	        import org.joda.time.DateTime;
	        String now = new DateTime();
        	Thread.sleep(5000);
        	output.put('message','Internal Flow Called at ' + now.toString());
		]]></expression-component>
            <set-payload value="#[output]" doc:name="Set Payload"/>
            <json:object-to-json-transformer doc:name="Object to JSON"/>
    </flow>
    
    <flow name="externalProcessPs">
        <http:listener config-ref="HTTP_Listener_Configuration_API_REST_V01_TESTER" path="/process/ps" doc:name="HTTP"/>
        <logger message="External Process PS Called" level="INFO" doc:name="Log Process PS"/>
        <logger level="INFO" doc:name="Log Input Payload" message="EXT - External Process PS called with payload = #[System.getProperty('line.separator')] #[message.payloadAs(java.lang.String)]" />
        <set-variable variableName="output" value="#[new java.util.HashMap()]" doc:name="output"/>
        <expression-component doc:name="Expression"><![CDATA[
	        import org.joda.time.DateTime;
	        DateTime nowInput = new DateTime();
        	Thread.sleep(5000);
	        DateTime nowOutput = new DateTime();
        	output.put('message','External Process PS Called at ' + nowInput.toString() + ' and return at ' + nowOutput.toString());
		]]></expression-component>
            <set-payload value="#[output]" doc:name="Set Payload"/>
            <json:object-to-json-transformer doc:name="Object to JSON"/>
    </flow>    
</mule>
