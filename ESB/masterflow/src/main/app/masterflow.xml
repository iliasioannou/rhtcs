<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:sftp="http://www.mulesoft.org/schema/mule/sftp" xmlns:ftp="http://www.mulesoft.org/schema/mule/ftp" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="CE-3.4.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <flow name="masterFlow" doc:name="masterFlow">
        <http:inbound-endpoint exchange-pattern="one-way" host="0.0.0.0" port="9090"  doc:name="Activiti Request"/>

        <set-variable variableName="productId" value="#[message.inboundProperties['http.relative.path']]" doc:name="set productId var"/>

        <logger message="New -#[productId]- request received!" level="INFO" doc:name="Request Received"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Java HashMap"/>
        <logger message="Received payload: #[payload]" level="INFO" doc:name="Payload logger"/>
        <foreach collection="#[payload.entrySet()]" doc:name="For Each">
            <set-variable variableName="#[payload.key]" value="#[payload.value]" doc:name="set key=value var"/>
        </foreach>
        <set-payload value="#[params]" doc:name="Set params"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <scripting:component doc:name="Python">
            <scripting:script engine="jython"><![CDATA[# client.py
import xmlrpclib

slaveServer = muleContext.getRegistry().get(productId+".server")
transferPath = muleContext.getRegistry().get("mastermule.transferpath")

print slaveServer, script

proxy = xmlrpclib.ServerProxy(slaveServer)
result = proxy.execute(processInstanceId, user, productId, script, payload, transferPath)]]></scripting:script>
        </scripting:component>
        <logger message="JSON python output: #[payload]" level="INFO" doc:name="Log py Output"/>
        <http:outbound-endpoint exchange-pattern="request-response" host="#[activitiHost]" port="#[activitiPort]" path="#[activitiPath]process-instance/#[executionId]/event/#[signal]" method="POST" user="kermit" password="kermit" doc:name="Signal to Activiti"/>
        <object-to-string-transformer doc:name="Object to String"/>
        <logger message="Signal -#[signal]- sent back to Activiti ProcessIstance N.#[executionId] \n HTTP Status code: #[message.inboundProperties['http.status']] -- HTTP Response: #[payload]" level="INFO" doc:name="Logger"/>
        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <logger message="!!! Exception: --- #[exception.getCause().getMessage()] ---" level="WARN" doc:name="Logger"/>
            <set-payload value="{ &quot;errorMessage&quot;: &quot;Python Exception in the script&quot; }" doc:name="Set Payload"/>
            <json:object-to-json-transformer doc:name="Object to JSON"/>
            <http:outbound-endpoint exchange-pattern="request-response" host="#[activitiHost]" port="#[activitiPort]" path="#[activitiPath]process-instance/#[executionId]/event/slaveErrorSignal" method="POST" user="kermit" password="kermit" doc:name="Error Signal to Activiti"/>
            <object-to-string-transformer doc:name="Object to String"/>
            <logger message="Error Signal sent back to Activiti ProcessIstance N.#[executionId] \n HTTP Status code: #[message.inboundProperties['http.status']] -- HTTP Response: #[payload]" level="INFO" doc:name="Logger"/>
        </catch-exception-strategy>
    </flow>

</mule>
