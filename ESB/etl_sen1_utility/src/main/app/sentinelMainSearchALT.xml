<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/https http://www.mulesoft.org/schema/mule/https/current/mule-https.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/email http://www.mulesoft.org/schema/mule/email/current/mule-email.xsd
http://www.mulesoft.org/schema/mule/ftp http://www.mulesoft.org/schema/mule/ftp/current/mule-ftp.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    
    <spring:beans>
		<spring:bean id="objectStore"
			class="org.mule.util.store.SimpleMemoryObjectStore" />
		<context:property-placeholder location="classpath:sen1utility.properties" />
		<spring:bean id="sentinelProps"
			class="org.springframework.beans.factory.config.PropertiesFactoryBean">
			<spring:property name="singleton" value="true" />
			<spring:property name="location"
				value="classpath:sen1utility.properties" />
		</spring:bean>
	</spring:beans>
	<flow name="sentinelMainSearchALTFlow1" 
		doc:description="{
&quot;startDate&quot;:&quot;2014-01-01T00:00:00.000Z&quot;,
&quot;endDate&quot;:&quot;2015-01-28T00:00:00.000Z&quot;,
&quot;AOI&quot;:&quot;POLYGON((-4.53 29.85, 26.75 29.85, 26.75 46.80,-4.53 46.80,-4.53 29.85))&quot;
}" processingStrategy="synchronous">
        <set-variable variableName="saveJson" value="#[payload]" doc:name="save Json" mimeType="application/json"/>

		<logger message="SEARCH FLOW CONNECTION with payload: #[payload]" level="INFO"
			doc:name="ALT SEARCH FLOW" />
		<json:json-to-object-transformer
			returnClass="java.util.HashMap" doc:name="JSON to HashMap" />
        <set-variable variableName="typeFilter" value="producttype:#[payload.get(&quot;type&quot;)]" doc:name="typeFilter"/>
        <choice doc:name="Choice">
            <when expression="payload.get(&quot;AOI&quot;)==null">
                <set-variable variableName="aoiFilter" value="" doc:name="aoiFilterNotExists"/>
            </when>
            <otherwise>
                <set-variable variableName="aoiFilter" value="AND+footprint:&quot;Intersects(#[URLEncoder.encode(payload.get(&quot;AOI&quot;), &quot;UTF-8&quot;)])&quot;+" doc:name="aoiFilter"/>
            </otherwise>
        </choice>

		<set-variable variableName="dateFilter"
			value="[#[payload.get(&quot;startDate&quot;)]%20TO%20#[payload.get(&quot;endDate&quot;)]]"
			doc:name="dateFilter" />
        <set-variable variableName="startRows" value="start=#[payload.get(&quot;startRows&quot;)]" doc:name="startRows"/>
        <set-variable variableName="querystr" value="#[typeFilter]+#[aoiFilter]AND+ingestionDate:#[dateFilter]${sentinel.queryoptions}&amp;#[startRows]" doc:name="querystr"/>

        <until-successful maxRetries="${sentinel.search.retries}" synchronous="true" doc:name="Until Successful" millisBetweenRetries="${sentinel.search.timebetween.retries}">
            <processor-chain doc:name="Processor Chain">
                <component class="org.mule.transformers.sentinelHTTPSearch" doc:name="sentinelHTTPSearch"/>
                <scripting:component doc:name="HTTP Status Check">
                    <scripting:script engine="Groovy"><![CDATA[httpStatus = message.getInboundProperty('http.status');
if(httpStatus != 200)
	throw new org.apache.commons.httpclient.HttpException("Sentinel DataHub returned an HTTP error code: "+httpStatus)
return payload]]></scripting:script>
                </scripting:component>
            </processor-chain>
        </until-successful>

		<logger
			message="CODE: #[message.inboundProperties['http.status']] BODY: #[payload.substring(0, 500)]..."
			level="INFO" doc:name="HTTP 200 OK" />

	</flow>
</mule>
