<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:spring="http://www.springframework.org/schema/beans" version="CE-3.4.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd">
    <flow name="dp_psFlow1" doc:name="dp_psFlow1">
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="8081" doc:name="HTTP"/>
        <json:json-to-object-transformer returnClass="java.util.ArrayList" doc:name="JSON to Object"/>
        <set-variable variableName="dataset_list" value="#[new java.util.HashSet()]" doc:name="dataset_list"/>
        <foreach doc:name="For Each">
            <set-variable variableName="datasetID" value="#[payload.get(&quot;datasetID&quot;)]" doc:name="datasetID"/>
            <choice doc:name="Choice">
                <when expression="#[!dataset_list.contains(datasetID)]">
                    <logger message="Dataset non Presente" level="INFO" doc:name="dataset non presente"/>
                    <expression-component doc:name="update dataset_list"><![CDATA[dataset_list.add(datasetID);]]></expression-component>
                    <set-variable variableName="dataset" value="#[new java.util.HashMap()]" doc:name="dataset"/>
                    <expression-component doc:name="insert datasetID"><![CDATA[dataset.put("datasetID", datasetID);]]></expression-component>
                    <set-payload value="{&quot;fields&quot; : [&quot;uuid&quot;, &quot;linkDownload&quot;],&quot;query&quot;: { &quot;match&quot;: {&quot;datasetID&quot;:&quot;#[datasetID]&quot; }}}" doc:name="Set Payload query elasticsearch"/>
                    <http:outbound-endpoint exchange-pattern="request-response" host="localhost" port="9200" path="sentinel/sen/_search" method="POST" doc:name="HTTP"/>
                    <set-payload value="#[json:hits/hits]" doc:name="Set Payload"/>
                    <json:json-to-object-transformer returnClass="java.util.ArrayList" doc:name="JSON to Object"/>
                    <set-variable variableName="data" value="#[new java.util.ArrayList()]" doc:name="data"/>
                    <foreach doc:name="For Each">
                        <set-variable variableName="fields" value="#[new java.util.HashMap()]" doc:name="fields"/>
                        <set-variable variableName="link" value="#[json:fields/linkDownload[0]]" doc:name="link"/>
                        <set-variable variableName="uuid" value="#[json:fields/uuid[0]]" doc:name="uuid"/>
                        <expression-component doc:name="Expression"><![CDATA[fields.put("uuid",uuid);
fields.put("linkDownload",link);
data.add(fields);]]></expression-component>
                    </foreach>
                    <expression-component doc:name="Expression"><![CDATA[dataset.put("data", data);]]></expression-component>
                    <set-payload value="#[dataset]" doc:name="Set Payload"/>
                    <json:object-to-json-transformer doc:name="Object to JSON"/>
                    <logger message="#[payload]" level="INFO" doc:name="Logger"/>
                    <scripting:component doc:name="Python">
                        <scripting:script engine="jython"><![CDATA[# client.py
import sys

#sys.path.append('C:\\Users\\adminpk\\Desktop\\xmlrpclib-1.0.1')
#print sys.path

import xmlrpclib

print "Calling the slave ..."
proxy = xmlrpclib.ServerProxy("http://cristal.planetek.it:9091/")
result = proxy.execute(payload)
print "ExitCode: ", result]]></scripting:script>
                    </scripting:component>
                    <logger message="#[payload]" level="INFO" doc:name="Logger"/>
                </when>
                <otherwise>
                    <logger message="Dataset Presente" level="INFO" doc:name="Dataset Presente"/>
                </otherwise>
            </choice>
        </foreach>
    </flow>
</mule>
