<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ftp="http://www.mulesoft.org/schema/mule/ftp" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:https="http://www.mulesoft.org/schema/mule/https" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:spring="http://www.springframework.org/schema/beans" version="CE-3.4.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/https http://www.mulesoft.org/schema/mule/https/current/mule-https.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/ftp http://www.mulesoft.org/schema/mule/ftp/current/mule-ftp.xsd">

	<ftp:connector name="createPathFtpConnector" doc:name="FTP">
		<dispatcher-threading-profile
			doThreading="false" />
		<service-overrides
			dispatcherFactory="org.mule.transport.customftp.CreatePathFtpMessageDispatcherFactory"></service-overrides>
	</ftp:connector> 
	
    <flow name="landsat8MainDownloadFlow1" doc:name="landsat8MainDownloadFlow1" doc:description="LC80030172015001LGN00">
        <http:inbound-endpoint exchange-pattern="request-response" host="0.0.0.0" port="9091" path="download" doc:name="HTTP"/>
        <object-to-string-transformer doc:name="Object to String"/>
        <set-variable variableName="sceneID" value="#[payload]" doc:name="sceneID"/>
        <set-payload value="Download Request received." doc:name="Set RespBody"/>
        <http:response-builder status="200" doc:name="HTTP Response Builder"/>
        <async doc:name="Async">
            <https:outbound-endpoint exchange-pattern="request-response" host="${landsat8.host}" port="${landsat8.port}" path="${landsat8.path}#[sceneID]" method="GET" doc:name="search SceneID"/>
            <logger message="Search HTTP resp: #[message]" level="INFO" doc:name="Logger"/>
            <scripting:component doc:name="HTTP status check">
                <scripting:script engine="Groovy"><![CDATA[httpStatus = message.getInboundProperty('http.status');
if(httpStatus != "200")
	throw new org.apache.commons.httpclient.HttpException("Landsat8 DataHub returned an HTTP error code: "+httpStatus)
return payload]]></scripting:script>
            </scripting:component>
            <object-to-string-transformer doc:name="Object to String"/>
            <set-variable variableName="pathID" value="#[json:results[0]/path]" doc:name="pathID"/>
            <scripting:component doc:name="leading 0s to pathID">
                <scripting:script engine="Groovy"><![CDATA[flowVars['pathID'] = "0"*(3-flowVars['pathID'].toString().length())+flowVars['pathID']
return payload]]></scripting:script>
            </scripting:component>
            <set-variable variableName="rowID" value="#[json:results[0]/row]" doc:name="rowID"/>
            <scripting:component doc:name="leading 0s to rowID">
                <scripting:script engine="Groovy"><![CDATA[flowVars['rowID'] = "0"*(3-flowVars['rowID'].toString().length())+flowVars['rowID']
return payload]]></scripting:script>
            </scripting:component>
            <logger message="Generated URL: ${landsat8.download.path}/#[pathID]/#[rowID]/#[sceneID]/xxxxx.xxx" level="INFO" doc:name="Generated URL"/>
            <component class="org.mule.transformers.landsat8TempDirComponent" doc:name="Create tempDir"/>
            <set-variable variableName="tempDirPath" value="#[payload]" doc:name="tempDirPath"/>
            <set-payload value="#[[&quot;_B1.TIF&quot;, &quot;_B2.TIF&quot;, &quot;_B3.TIF&quot;, &quot;_B4.TIF&quot;, &quot;_B5.TIF&quot;, &quot;_B6.TIF&quot;, &quot;_B7.TIF&quot;, &quot;_B8.TIF&quot;, &quot;_B9.TIF&quot;, &quot;_B10.TIF&quot;, &quot;_B11.TIF&quot;, &quot;_BQA.TIF&quot;, &quot;_MTL.txt&quot; ]]" doc:name="set Download Suffixes List    "/>
            <foreach doc:name="For Each">
                <set-variable variableName="fileName" value="#[sceneID]#[payload]" doc:name="set fileName"/>
                <http:outbound-endpoint exchange-pattern="request-response" host="${landsat8.download.host}" port="${landsat8.download.port}" path="${landsat8.download.path}/#[pathID]/#[rowID]/#[sceneID]/#[fileName]" method="GET" doc:name="HTTP"/>
                <logger message="Download HTTP resp: #[message]" level="INFO" doc:name="HTTP resp"/>
                <scripting:component doc:name="HTTP status check">
                    <scripting:script engine="Groovy"><![CDATA[httpStatus = message.getInboundProperty('http.status');
if(httpStatus != "200")
	throw new org.apache.commons.httpclient.HttpException("Landsat8 DataHub returned an HTTP error code: "+httpStatus)
return payload]]></scripting:script>
                </scripting:component>
                <ftp:outbound-endpoint host="${ftp.host}" port="${ftp.port}" path="${landsat8.ftp.path}" user="${ftp.usr}" password="${ftp.pwd}" responseTimeout="10000" doc:name="FTP" connector-ref="createPathFtpConnector" outputPattern="#[sceneID]/#[fileName]"/>
                <logger message="Deleting temp file #[fileName]: #[new File(tempDirPath, fileName).delete()] " level="INFO" doc:name="Delete temp FILE"/>
                
            </foreach>
            <set-payload value="{ &quot;directory&quot;: &quot;${apollo.repo.path}${landsat8.ftp.path}#[sceneID]&quot;, &quot;aggregateId&quot;:&quot;${landsat8.apollo.aggregate}&quot; }" doc:name="Set CrawlBodyReq"/>
            <flow-ref name="apolloLoaderFlow1" doc:name="Apollo Loader"/>
            <logger level="INFO" doc:name="Logger"/>
        </async>
    </flow>
</mule>
